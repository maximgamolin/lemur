{"version":3,"sources":["blocks/UserCard/index.module.css","App/index.module.css","typography/Text/index.module.css","typography/Heading/index.js","pages/DatasetListPage/img/search.svg","pages/DatasetListPage/img/settings.svg","api.js","redux/actions.js","typography/Text/index.js","blocks/DatasetPreview/clock.svg","blocks/DatasetPreview/owner.svg","blocks/DatasetPreview/placeholder.svg","blocks/DatasetPreview/add.svg","blocks/DatasetPreview/index.js","pages/DatasetListPage/index.js","pages/GenerateSelectionPage/CreateSelection/index.js","pages/GenerateSelectionPage/PrepareSelection/add.svg","pages/GenerateSelectionPage/PrepareSelection/remove.svg","blocks/DataProcessingView/CustomState.js","blocks/DataProcessingView/VariableNode.js","blocks/DataProcessingView/index.js","pages/GenerateSelectionPage/PrepareSelection/index.js","pages/GenerateSelectionPage/index.js","blocks/UserCard/placeholder.svg","blocks/UserCard/index.js","App/logo.svg","redux/store.js","App/index.js","index.js","blocks/DataProcessingView/index.module.css","typography/Heading/index.module.css","blocks/DatasetPreview/index.module.css","pages/GenerateSelectionPage/PrepareSelection/index.module.css","pages/DatasetListPage/index.module.css"],"names":["module","exports","Heading","className","size","children","rest","classNames","styles","h","h1","h2","h3","h4","HOST","api","URLS","getDatasets","addToCollection","formatUrl","s","arguments","i","length","reg","RegExp","replace","post","url","data","fetch","method","headers","cookies","get","body","JSON","stringify","then","res","json","actions","store","loadDataset","state","a","setState","allDatasets","toast","error","catch","err","id","dataset_id","success","Text","text","moment","locale","DatasetPreview","onClick","img","title","owner","updated","descr","onAddClick","wrapper","src","placeholderIcon","alt","content","info","clockIcon","fromNow","addIcon","connect","availableTags","useEffect","console","log","searchInputRow","searchWrapper","searchIcon","Input","searchInput","placeholder","filterWrapper","settingsIcon","tagsWrapper","map","item","datasetList","dataset","name","Date","updated_at","description","CreateSelection","form","useFormState","values","onValidate","onSubmit","alert","Form","style","marginTop","FormLabel","FormInput","FormMessage","FormSubmitButton","CreateLinkState","registerAction","Action","type","InputType","MOUSE_UP","fire","actionEvent","element","engine","getActionEventBus","getModelForEvent","event","clientX","clientY","ox","getModel","getOffsetX","oy","getOffsetY","PortModel","sourcePort","link","createLinkModel","setSourcePort","getLastPoint","setPosition","addLink","canLinkToPort","setTargetPort","reportPosition","clearState","eject","point","parent","options","repaintCanvas","MOUSE_MOVE","movementX","movementY","KEY_UP","keyCode","remove","this","undefined","State","VariablePortModel","alignment","in","DefaultLinkModel","DefaultPortModel","VariablePortFactory","cb","initialConfig","AbstractModelFactory","VariableNodeModel","test","value","addPort","PortModelAlignment","RIGHT","NodeModel","VariableNodeWidget","props","handleChange","bind","e","node","target","variableNode","variableInput","onChange","variablePort","port","getPort","React","Component","VariableNodeFactory","model","AbstractReactFactory","DataProcessingView","datasets","operators","addResBlock","useState","setEngine","setModel","forceUpdate","setValue","useForceUpdate","createEngine","DiagramModel","y_counter","DefaultNodeModel","color","Object","keys","schema","field","addOutPort","addNode","addInPort","getPortFactories","registerFactory","config","LEFT","getNodeFactories","groupedOperators","operator","category","push","toolsMenu","group","Dropdown","toolsButton","Toggle","Menu","Item","href","find","inPorts","outPorts","addOperator","Button","var1","nodes","serialize","layers","layer","models","ports","source","targetPort","datasetsInCollection","dataOperators","selections","setSelections","selectionId","setSelectionId","selectedSelection","setSelectedSelection","common","filter","currentOperators","tab","useTabState","selectedId","list","datasetPreview","sort","b","selection","selectionPreview","previewActive","preventDefault","handleChangeSelectionName","removeIcon","stopPropagation","x","handleDeleteSelection","TabList","Tab","editor","TabPanel","GenerateSelectionPage","match","useRouteMatch","path","UserCard","avatar","avatarPlaceholderIcon","namesurname","createStore","feature","join","App","unstable_system","system","sideMenu","to","logo","userCard","mainBlock","toastOptions","borderRadius","fontFamily","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94f04b6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserCard_wrapper__2J97c\",\"avatar\":\"UserCard_avatar__2eFh8\",\"namesurname\":\"UserCard_namesurname__3AiB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__15Fy3\",\"sideMenu\":\"App_sideMenu__v8fkh\",\"logo\":\"App_logo__1OdPF\",\"mainBlock\":\"App_mainBlock__2mbQQ\",\"userCard\":\"App_userCard__1hM3z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__SuyIP\",\"xsSize\":\"Text_xsSize__3GtPl\"};","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport styles from './index.module.css';\n\n\nfunction Heading({ className, size, children, ...rest }) {\n\n    switch (size) {\n        case 'h1':\n            return <h1 className={classNames(className, styles.h, styles.h1)} {...rest}>{children}</h1>;\n        case 'h2':\n            return <h2 className={classNames(className, styles.h, styles.h2)} {...rest}>{children}</h2>;\n        case 'h3':\n            return <h3 className={classNames(className, styles.h, styles.h3)} {...rest}>{children}</h3>;\n        case 'h4':\n            return <h4 className={classNames(className, styles.h, styles.h4)} {...rest}>{children}</h4>;\n        default:\n            return <span className={styles.h} {...rest}>{children}</span>;\n    }\n}\n\nexport default Heading;\n","export default __webpack_public_path__ + \"static/media/search.7ea9ee1e.svg\";","export default __webpack_public_path__ + \"static/media/settings.b26be83e.svg\";","import cookies from \"browser-cookies\";\n\nconst HOST = 'http://127.0.0.1:8000/api/v1/';\n\nconst api = {\n    URLS: {\n        getDatasets: 'stock/datasets/',\n        addToCollection: 'market/collection-items/',\n    },\n\n    formatUrl: function () {\n        let s = arguments[0];\n        for (let i = 0; i < arguments.length - 1; i++) {\n            const reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\n            s = s.replace(reg, arguments[i + 1]);\n        }\n        return s;\n    },\n\n    post: (url, data) => {\n        return fetch(HOST + url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n                'X-CSRFToken': cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(data),\n        })\n            .then((res) => res.json());\n    },\n\n    get: function (url) {\n        return fetch(HOST + url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n                'X-CSRFToken': cookies.get('csrftoken'),\n            },\n        })\n            .then((res) => res.json());\n    }\n}\n\nexport default api;\n","import toast from 'react-hot-toast';\n\nimport api from '../api';\n\n\nconst actions = store => ({\n    loadDataset: async (state) => {\n        api.get(api.URLS.getDatasets)\n            .then((res) => {\n                if (res)\n                    store.setState({ allDatasets: res });\n                else\n                    toast.error('Не удалось загрузить датасеты');\n            })\n            .catch((err) => toast.error('Не удалось загрузить датасеты'));\n    },\n    addToCollection: async (state, id) => {\n        api.post(api.URLS.addToCollection, { dataset_id: id })\n            .then((res) => {\n                if (res) {\n                     toast.success('Датасет добавлен в коллекцию!');\n                }\n                else\n                    toast.error('Не удалось загрузить датасеты');\n            })\n            .catch((err) => toast.error('Не удалось загрузить датасеты'));\n    },\n});\n\nexport default actions;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport styles from './index.module.css';\n\n\nfunction Text({ className, size, children, ...rest }) {\n    return (\n        <p className={classNames(className, styles.text, styles[`${size}Size`])} {...rest}>{children}</p>\n    )\n}\n\nexport default Text;\n","export default __webpack_public_path__ + \"static/media/clock.bb84dd53.svg\";","export default __webpack_public_path__ + \"static/media/owner.be8961c9.svg\";","export default __webpack_public_path__ + \"static/media/placeholder.39978fe0.svg\";","export default __webpack_public_path__ + \"static/media/add.f01ab0bf.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport moment from \"moment\";\nimport 'moment/locale/ru';\n\nimport styles from './index.module.css';\nimport Heading from \"../../typography/Heading\";\nimport Text from \"../../typography/Text\";\nimport ownerIcon from './owner.svg';\nimport clockIcon from './clock.svg';\nimport placeholderIcon from './placeholder.svg';\nimport addIcon from './add.svg';\n\n\nmoment.locale('ru');\n\nfunction DatasetPreview({ onClick, className, img, title, owner, updated, descr, onAddClick, ...rest }) {\n    return (\n        <div onClick={onClick} className={classNames(className, styles.wrapper)} {...rest}>\n            <img className={styles.img} src={img??placeholderIcon} alt=\"\" />\n            <div className={styles.content}>\n                <Heading size=\"h3\">{title}</Heading>\n                <div className={styles.info}>\n                    <Text className={styles.text} size=\"xs\">\n                        {owner ? (<>\n                            <img src={clockIcon} alt=\"\"/>\n                            {owner}\n                        </>) : ''}\n                    </Text>\n                    <Text className={styles.text} size=\"xs\">\n                        {updated ? (<>\n                            <img src={clockIcon} alt=\"\"/>\n                            {moment(updated).fromNow()}\n                        </>) : ''}\n                    </Text>\n                </div>\n                <Text className={classNames(styles.text, styles.descr)} size=\"xs\">{descr}</Text>\n            </div>\n            <img className={styles.addIcon} onClick={onAddClick} src={addIcon} alt=\"\"/>\n        </div>\n    )\n}\n\nexport default DatasetPreview;\n","import React, { useEffect } from \"react\";\nimport { Input } from \"reakit/Input\";\nimport { connect } from \"redux-zero/react\";\nimport toast from 'react-hot-toast';\n\nimport Heading from \"../../typography/Heading\";\nimport styles from './index.module.css';\nimport searchIcon from './img/search.svg';\nimport settingsIcon from './img/settings.svg';\nimport actions from \"../../redux/actions\";\n\nimport DatasetPreview from \"../../blocks/DatasetPreview\";\n\n\nfunction DatasetListPage({ availableTags, addToCollection, allDatasets, loadDataset, ...rest }) {\n    function handleAddDataset(id) {\n        addToCollection(id);\n    }\n\n    useEffect(() => {\n        loadDataset();\n    }, []);\n\n    console.log(allDatasets);\n\n    return (\n        <>\n            <div>\n                <Heading size=\"h1\">VTB Datasets</Heading>\n            </div>\n\n            <div className={styles.searchInputRow}>\n                <div className={styles.searchWrapper}>\n                    <img src={searchIcon} className={styles.searchIcon} alt=\"\"/>\n                    <Input className={styles.searchInput} placeholder=\"Найти датасет\" />\n                    <div className={styles.filterWrapper}>\n                        <img src={settingsIcon} alt=\"\"/>\n                        <button>\n                            Фильтры\n                        </button>\n                    </div>\n                </div>\n                <div className={styles.tagsWrapper}>\n                    {availableTags.map((item) => (\n                        <button>{item}</button>\n                    ))}\n                </div>\n            </div>\n\n            <div>\n                <Heading size=\"h2\">Последние датасеты</Heading>\n                <div className={styles.datasetList}>\n                    {allDatasets.map((dataset) => (\n                        <DatasetPreview key={dataset.id} id={dataset.id} onAddClick={() => handleAddDataset(dataset.id)}\n                                        title={dataset.name} owner={dataset.owner} updated={new Date(dataset.updated_at)}\n                                        descr={dataset.description} />\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst mapToProps = ({availableTags, allDatasets}) => ({availableTags, allDatasets});\n\nexport default connect(mapToProps, actions)(DatasetListPage);\n","import React from \"react\";\nimport {\n  unstable_useFormState as useFormState,\n  unstable_Form as Form,\n  unstable_FormLabel as FormLabel,\n  unstable_FormInput as FormInput,\n  unstable_FormMessage as FormMessage,\n  unstable_FormSubmitButton as FormSubmitButton,\n} from \"reakit/Form\";\nimport { Input } from \"reakit/Input\";\nimport Heading from \"../../../typography/Heading\";\n\n\nfunction CreateSelection({ ...rest }) {\n    const form = useFormState({\n        values: { name: '' },\n        onValidate: (values) => {\n            if (!values.name) {\n                const errors = {\n                    name: \"Нужно заполнить название\",\n                };\n                throw errors;\n            }\n        },\n        onSubmit: (values) => {\n            alert(JSON.stringify(values, null, 2));\n        },\n    });\n\n    return (\n        <>\n            <Heading size=\"h1\">Создание нового датасета</Heading>\n\n            <Form style={{ marginTop: '32px' }} {...form}>\n                <FormLabel {...form} name=\"name\">Названия новой выборки</FormLabel>\n                <FormInput {...form} name=\"name\" placeholder=\"Новая выборка\"/>\n                <FormMessage {...form} name=\"name\"/>\n                <FormSubmitButton {...form}>Далее</FormSubmitButton>\n            </Form>\n        </>\n    )\n}\n\nexport default CreateSelection;\n","export default __webpack_public_path__ + \"static/media/add.f01ab0bf.svg\";","export default __webpack_public_path__ + \"static/media/remove.491bcb35.svg\";","import { Action, DragCanvasState, InputType, SelectingState, State } from \"@projectstorm/react-canvas-core\";\nimport { DragDiagramItemsState, PortModel } from \"@projectstorm/react-diagrams-core\";\n\nexport class CreateLinkState extends State {\n\tsourcePort;\n\tlink;\n\n\tconstructor() {\n\t\tsuper({ name: 'create-new-link' });\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: (actionEvent) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(actionEvent);\n\t\t\t\t\tconst {\n\t\t\t\t\t\tevent: { clientX, clientY }\n\t\t\t\t\t} = actionEvent;\n\t\t\t\t\tconst ox = this.engine.getModel().getOffsetX();\n\t\t\t\t\tconst oy = this.engine.getModel().getOffsetY();\n\n\t\t\t\t\tif (element instanceof PortModel && !this.sourcePort) {\n\t\t\t\t\t\tthis.sourcePort = element;\n\n\t\t\t\t\t\tconst link = this.sourcePort.createLinkModel();\n\t\t\t\t\t\tlink.setSourcePort(this.sourcePort);\n\t\t\t\t\t\t// link.getFirstPoint().setPosition(clientX - ox, clientY - oy);\n\t\t\t\t\t\tlink.getLastPoint().setPosition(clientX - ox + 20, clientY - oy + 20);\n\n\t\t\t\t\t\tthis.link = this.engine.getModel().addLink(link);\n\t\t\t\t\t} else if (element instanceof PortModel && this.sourcePort && element != this.sourcePort) {\n\t\t\t\t\t\tif (this.sourcePort.canLinkToPort(element)) {\n\t\t\t\t\t\t\tthis.link.setTargetPort(element);\n\t\t\t\t\t\t\telement.reportPosition();\n\t\t\t\t\t\t\tthis.clearState();\n\t\t\t\t\t\t\tthis.eject();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (element === this.link.getLastPoint()) {\n\t\t\t\t\t\tthis.link.point(clientX - ox, clientY - oy, -1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (element && this.sourcePort) {\n\t\t\t\t\t\tconsole.log(`from ${this.sourcePort.parent.options.name}(${this.sourcePort.options.name})`);\n\t\t\t\t\t\tconsole.log(`to ${element.parent.options.name}(${element.options.name})`);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(`from: ${this.sourcePort} to: ${element}`);\n\t\t\t\t\t// console.log(element);\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent) => {\n\t\t\t\t\tif (!this.link) return;\n\t\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t\t// console.log(event);\n\t\t\t\t\tthis.link.getLastPoint().setPosition(event.movementX, event.movementY);\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: (actionEvent) => {\n\t\t\t\t\t// on esc press remove any started link and pop back to default state\n\t\t\t\t\tif (actionEvent.event.keyCode === 27) {\n\t\t\t\t\t\tthis.link.remove();\n\t\t\t\t\t\tthis.clearState();\n\t\t\t\t\t\tthis.eject();\n\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tclearState() {\n\t\tthis.link = undefined;\n\t\tthis.sourcePort = undefined;\n\t}\n}\n\nexport class DefaultState extends State {\n\tdragCanvas;\n\tcreateLink;\n\tdragItems;\n\n\tconstructor() {\n\t\tsuper({ name: 'starting-state' });\n\t\tthis.childStates = [new SelectingState()];\n\t\tthis.dragCanvas = new DragCanvasState();\n\t\tthis.createLink = new CreateLinkState();\n\t\tthis.dragItems = new DragDiagramItemsState();\n\n\t\t// determine what was clicked on\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// the canvas was clicked on, transition to the dragging canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(this.dragCanvas, event);\n\t\t\t\t\t}\n\t\t\t\t\t// initiate dragging a new link\n\t\t\t\t\telse if (element instanceof PortModel) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// move the items (and potentially link points)\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.transitionWithEvent(this.dragItems, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\t// touch drags the canvas\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.TOUCH_START,\n\t\t\t\tfire: (event) => {\n\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: (event) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\tif (element instanceof PortModel) this.transitionWithEvent(this.createLink, event);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n\nexport default DefaultState;\n","import React from \"react\";\nimport { AbstractReactFactory, AbstractModelFactory } from '@projectstorm/react-canvas-core';\nimport { DefaultLinkModel } from \"@projectstorm/react-diagrams\";\nimport { PortModel, PortModelAlignment, NodeModel, PortWidget, DefaultPortModel } from \"@projectstorm/react-diagrams\";\nimport styles from './index.module.css';\n\n\nexport class VariablePortModel extends DefaultPortModel {\n\tconstructor(alignment) {\n\t\tsuper({\n            in: false,\n\t\t\ttype: 'variable',\n\t\t\tname: alignment,\n\t\t\talignment: alignment,\n\t\t});\n\t}\n\n    createLinkModel() {\n\t\treturn new DefaultLinkModel();\n\t}\n}\n\n\nexport class VariablePortFactory extends AbstractModelFactory {\n\tcb;\n\n\tconstructor(type, cb) {\n\t\tsuper(type);\n\t\tthis.cb = cb;\n\t}\n\n\tgenerateModel(event) {\n\t\treturn this.cb(event.initialConfig);\n\t}\n}\n\n\nexport class VariableNodeModel extends NodeModel {\n    value = ''\n\n    constructor() {\n        super({\n            type: 'variable',\n            test: 'test',\n        });\n        this.addPort(new VariablePortModel(PortModelAlignment.RIGHT));\n    }\n\n    serialize() {\n        return {\n            ...super.serialize(),\n            value: this.value,\n        };\n    }\n}\n\nexport class VariableNodeWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.props.node.value = e.target.value;\n    }\n\n    render() {\n        return (\n            <div className={styles.variableNode}>\n                <input type=\"text\"  className={styles.variableInput} onChange={this.handleChange}/>\n                <PortWidget className={styles.variablePort}\n                    port={this.props.node.getPort(PortModelAlignment.RIGHT)}\n                    engine={this.props.engine} />\n            </div>\n        );\n    }\n}\n\nexport class VariableNodeFactory extends AbstractReactFactory {\n    constructor() {\n        super('variable');\n    }\n\n    generateReactWidget(event) {\n        // event.model is basically what's returned from generateModel()\n        return <VariableNodeWidget engine={this.engine} size={50} node={event.model} />;\n    }\n\n    generateModel(event) {\n        return new VariableNodeModel();\n    }\n}\n","import React from \"react\";\nimport createEngine, {\n    DefaultLinkModel,\n    DefaultNodeModel,\n    DiagramModel,\n    PortModelAlignment,\n} from '@projectstorm/react-diagrams';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport { CanvasWidget } from '@projectstorm/react-canvas-core';\nimport { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport styles from './index.module.css';\nimport CustomState from \"./CustomState\";\nimport { VariableNodeFactory, VariableNodeModel, VariablePortFactory, VariablePortModel } from './VariableNode';\n\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0);\n    return () => setValue(value => value + 1);\n}\n\nfunction DataProcessingView({ className, datasets, operators, addResBlock, ...rest }) {\n    const [engine, setEngine] = useState();\n    const [model, setModel] = useState();\n    const forceUpdate = useForceUpdate();\n\n    useEffect(() => {\n        const engine = createEngine();\n\n        const model = new DiagramModel();\n        let y_counter = 100;\n        for (const dataset of datasets) {\n            const node = new DefaultNodeModel({\n                name: dataset.name,\n                color: 'rgb(0,192,255)',\n            });\n\n            for (const field of Object.keys(dataset.schema)) {\n                node.addOutPort(field);\n            }\n\n            node.setPosition(100, y_counter);\n            y_counter += 100;\n\n            model.addNode(node);\n        }\n\n        if (addResBlock) {\n            const node = new DefaultNodeModel({\n                name: 'res',\n                color: 'rgb(0,192,255)',\n            });\n            node.addInPort('res');\n            node.setPosition(500, 100);\n            model.addNode(node);\n        }\n\n        engine.getPortFactories().registerFactory(\n            new VariablePortFactory('diamond', (config) => new VariablePortModel(PortModelAlignment.LEFT))\n        );\n        engine.setModel(model);\n        // engine.getStateMachine().pushState(new CustomState());\n        engine.getNodeFactories().registerFactory(new VariableNodeFactory());\n\n        setModel(model);\n        setEngine(engine);\n    }, [datasets]);\n\n    function addOperator(id) {\n        const operator = operators.find((item) => item.id === id);\n        if (!operator)\n            return;\n\n        const node = new DefaultNodeModel({\n            name: operator.title,\n            color: 'rgb(0,192,255)',\n        });\n        for (const port of operator.inPorts)\n            node.addInPort(port);\n        for (const port of operator.outPorts)\n            node.addOutPort(port);\n\n        node.setPosition(200, 200);\n        model.addNode(node);\n        forceUpdate();\n    }\n\n    function addVariable() {\n        const var1 = new VariableNodeModel({\n            name: 'v1',\n        });\n        var1.setPosition(300, 300);\n        model.addNode(var1);\n        forceUpdate();\n    }\n\n    function dump() {\n        const res = {};\n\n        let nodes, links;\n        for (const layer of model.serialize().layers) {\n            if (layer.type === 'diagram-links')\n                links = layer;\n            else if (layer.type === 'diagram-nodes')\n                nodes = layer;\n        }\n\n        console.log(nodes);\n\n        res['nodes'] = Object.keys(nodes.models).map((id) => ({\n            id: id,\n            name: nodes.models[id].name,\n            value: nodes.models[id].value,\n            ports: nodes.models[id].ports.map((port) => ({\n                id: port.id,\n                name: port.name,\n            })),\n        }));\n        res['links'] = Object.keys(nodes.models).map((id) => ({\n            id: id,\n            source: nodes.models[id].source,\n            sourcePort: nodes.models[id].sourcePort,\n            target: nodes.models[id].target,\n            targetPort: nodes.models[id].targetPort,\n        }));\n\n        console.log(res);\n    }\n\n    const groupedOperators = {};\n    for (const operator of operators)\n        if (operator.category in groupedOperators)\n            groupedOperators[operator.category].push(operator);\n        else\n            groupedOperators[operator.category] = [operator];\n\n    return (\n        <div className={styles.wrapper} {...rest} >\n            <div className={styles.toolsMenu}>\n                {Object.keys(groupedOperators).map((group) => (\n                    <Dropdown className={styles.toolsButton}>\n                        <Dropdown.Toggle id=\"dropdown-basic\">{group}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {groupedOperators[group].map((item) => (\n                                <Dropdown.Item href=\"#/action-1\" onClick={() => addOperator(item.id)}>\n                                    {item.title}\n                                </Dropdown.Item>\n                            ))}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                ))}\n                <Button className={styles.toolsButton} onClick={addVariable}>Переменная</Button>\n                <button onClick={dump}>Serialize</button>\n            </div>\n\n            {engine && <CanvasWidget className={styles.wrapper} engine={engine}/>}\n\n        </div>\n    )\n}\n\nexport default DataProcessingView;\n","import React, { useState } from \"react\";\nimport { useTabState, Tab, TabList, TabPanel } from \"reakit/Tab\";\nimport { connect } from \"redux-zero/react\";\n\nimport Heading from \"../../../typography/Heading\";\nimport styles from './index.module.css';\nimport addIcon from './add.svg';\nimport removeIcon from './remove.svg';\nimport classNames from \"classnames\";\n\nimport DataProcessingView from './../../../blocks/DataProcessingView';\nimport actions from \"../../../redux/actions\";\n\n\nfunction PrepareSelection({ datasetsInCollection, dataOperators, ...rest }) {\n    const [selections, setSelections] = useState([]);\n    const [datasets, setDatasets] = useState(datasetsInCollection);\n    const [selectionId, setSelectionId] = useState(0);\n    const [selectedSelection, setSelectedSelection] = useState();\n    const [currentOperators, setCurrentOperators] = useState([...dataOperators.common, ...dataOperators.filter]);\n\n    const tab = useTabState({ selectedId: \"filterTab\" });\n\n    function handleChangeSelectionName(selection, e) {\n        selection.name = e.target.value;\n        setSelections([...selections.filter((item) => item.id !== selection.id), selection]);\n    }\n\n    function handleMoveToSelection(dataset) {\n        setSelections([...selections, {\n            id: selectionId,\n            name: dataset.name,\n            dataset: [dataset],\n        }]);\n        setSelectionId(selectionId + 1);\n    }\n\n    function handleDeleteSelection(e, id) {\n        e.stopPropagation()\n        setSelections([...selections.filter((x) => x.id !== id)]);\n        if (selectedSelection && id === selectedSelection.id)\n            setSelectedSelection({});\n    }\n\n    function handleSelectSelection(selection) {\n        setSelectedSelection(selectedSelection && selection.id === selectedSelection.id ? -1 : selection);\n    }\n\n    console.log(currentOperators);\n\n    return (\n        <>\n            <Heading size=\"h1\">Подготовка выборок</Heading>\n\n            <div className={styles.wrapper}>\n                <div className={styles.list}>\n                    {datasets.map((item) => (\n                        <div onClick={() => handleMoveToSelection(item)} className={styles.datasetPreview}>\n                            <span>{item.name}</span>\n                            <img src={addIcon} alt=\"\"/>\n                        </div>\n                    ))}\n                </div>\n                <div className={styles.list}>\n                    {selections.sort((a, b) => a.id < b.id).map((item) => {\n                        return (\n                            <div onClick={() => handleSelectSelection(item)}\n                                 className={classNames(styles.datasetPreview, styles.selectionPreview, {\n                                     [styles.previewActive]: selectedSelection && item.id === selectedSelection.id\n                                 })}>\n                                <input type=\"text\" value={item.name} onClick={(e) => e.preventDefault()}\n                                       onChange={(e) => handleChangeSelectionName(item, e)}/>\n                                <img src={removeIcon} alt=\"\"\n                                     onClick={(e) => handleDeleteSelection(e, item.id)}/>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n\n            {selectedSelection && (\n                <>\n                    <TabList {...tab} aria-label=\"My tabs\">\n                        <Tab {...tab} id=\"filterTab\">Фильтрация</Tab>\n                        <Tab {...tab}>Агрегация</Tab>\n                        <Tab {...tab}>Добавление фичей</Tab>\n                    </TabList>\n                    <div className={styles.editor}>\n                        <TabPanel {...tab}>\n                            <DataProcessingView\n                                operators={currentOperators}\n                                addResBlock\n                                datasets={selectedSelection.dataset}/>\n                        </TabPanel>\n                        <TabPanel {...tab}>Tab 2</TabPanel>\n                        <TabPanel {...tab}>Tab 3</TabPanel>\n                    </div>\n                </>\n            )}\n        </>\n    )\n}\n\nconst mapToProps = ({ datasetsInCollection, dataOperators }) => ({ datasetsInCollection, dataOperators });\n\nexport default connect(mapToProps, actions)(PrepareSelection);\n","import { BrowserRouter as Router, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport React from \"react\";\n\nimport CreateSelection from './CreateSelection';\nimport PrepareSelection from './PrepareSelection';\n\n\nfunction GenerateSelectionPage({ ...rest }) {\n    let match = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path={`${match.url}/prepare`}>\n                <PrepareSelection/>\n            </Route>\n            <Route path={`${match.url}`}>\n                <CreateSelection/>\n            </Route>\n        </Switch>\n    )\n}\n\nexport default GenerateSelectionPage;\n","export default __webpack_public_path__ + \"static/media/placeholder.c9d718fd.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport styles from './index.module.css';\nimport Heading from \"../../typography/Heading\";\nimport avatarPlaceholderIcon from './placeholder.svg';\n\n\nfunction UserCard({ onClick, className, avatar, ...rest }) {\n    return (\n        <div onClick={onClick} className={classNames(className, styles.wrapper)} {...rest}>\n            <div className={styles.avatar}>\n                <img src={avatar??avatarPlaceholderIcon} alt=\"\"/>\n            </div>\n            <div className={styles.namesurname}>\n                <Heading className={styles.text} size=\"h3\">Иия</Heading>\n                <Heading className={styles.text} size=\"h3\">Фамилия</Heading>\n            </div>\n        </div>\n    )\n}\n\nexport default UserCard;\n","export default __webpack_public_path__ + \"static/media/logo.24a18043.svg\";","import createStore from \"redux-zero\";\n\nconst initialState = {\n    availableTags: ['datasets', 'marketing', 'economy'],\n\n    dataOperators: {\n        common: [\n            // { id: 1, category: 'Математика', name: 'sum', title: 'Сложение', inPorts: ['a', 'b'], outPorts: ['res'] },\n            { id: 2, category: 'Строки', name: 'str_len', title: 'Длина строки', inPorts: ['str'], outPorts: ['enl'] },\n        ],\n        filter: [\n            { id: 5, category: 'Сравнение', name: 'eq', title: 'a == b', inPorts: ['a', 'b'], outPorts: ['res'] },\n            { id: 6, category: 'Сравнение', name: 'gt', title: 'a > b', inPorts: ['a', 'b'], outPorts: ['res'] },\n            { id: 7, category: 'Сравнение', name: 'gte', title: 'a >= b', inPorts: ['a', 'b'], outPorts: ['res'] },\n            { id: 8, category: 'Сравнение', name: 'lt', title: 'a < b', inPorts: ['a', 'b'], outPorts: ['res'] },\n            { id: 9, category: 'Сравнение', name: 'lte', title: 'a <= b', inPorts: ['a', 'b'], outPorts: ['res'] },\n        ],\n        feature: [],\n        join: [],\n    },\n    datasetsInCollection: [\n        {\n            id: 1,\n            name: 'group',\n            schema: {\n                'id': 'int',\n            },\n        },\n        {\n            id: 2,\n            name: 'user',\n            schema: {\n                'id': 'int',\n                'name': 'string',\n                'session_id': 'int',\n                'group_id': 'int',\n            },\n        },\n        {\n            id: 3,\n            name: 'session',\n            schema: {\n                'id': 'int',\n                'name': 'string',\n            },\n        },\n    ],\n    allDatasets: [],\n};\n\nconst store = createStore(initialState);\n\nexport default store;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport { Provider } from \"redux-zero/react\";\nimport { Toaster } from 'react-hot-toast';\nimport { Provider as ReakitProvider } from \"reakit\";\nimport * as system from \"reakit-system-bootstrap\";\n\nimport DatasetListPage from '../pages/DatasetListPage';\nimport GenerateSelectionPage from '../pages/GenerateSelectionPage';\nimport UserCard from \"../blocks/UserCard\";\n\nimport styles from './index.module.css';\nimport './common.css';\nimport logo from './logo.svg';\nimport store from './../redux/store';\n\n\nfunction App({ ...rest }) {\n    return (\n        <Provider store={store}>\n            <ReakitProvider unstable_system={system}>\n                <Router>\n                    <div className={styles.wrapper}>\n                        <div className={styles.sideMenu}>\n                            <Link to=\"/\"><img className={styles.logo} src={logo} alt=\"Логотип\"/></Link>\n                            <UserCard className={styles.userCard}/>\n                        </div>\n\n                        <main className={styles.mainBlock}>\n                            <Switch>\n                                <Route path=\"/collections\">\n                                    <GenerateSelectionPage/>\n                                </Route>\n                                <Route path=\"/\">\n                                    <DatasetListPage/>\n                                </Route>\n                            </Switch>\n                        </main>\n\n                        <Toaster toastOptions={{\n                            style: {\n                                borderRadius: '4px',\n                                fontFamily: 'VTBGroupUI',\n                            },\n                        }}/>\n                    </div>\n                </Router>\n            </ReakitProvider>\n        </Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"DataProcessingView_wrapper__1c1Ys\",\"toolsMenu\":\"DataProcessingView_toolsMenu__3ags8\",\"toolsButton\":\"DataProcessingView_toolsButton__2cCnO\",\"dropdown-menu\":\"DataProcessingView_dropdown-menu__3GNv-\",\"variableNode\":\"DataProcessingView_variableNode__2FI-7\",\"variableInput\":\"DataProcessingView_variableInput__1bIVE\",\"variablePort\":\"DataProcessingView_variablePort__7beb5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h\":\"Heading_h__qNJ-f\",\"h1\":\"Heading_h1__PlFcN\",\"h2\":\"Heading_h2__1ZVFL\",\"h3\":\"Heading_h3__2tSOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"DatasetPreview_text__3ctv-\",\"wrapper\":\"DatasetPreview_wrapper__3HAX2\",\"content\":\"DatasetPreview_content__H87Kw\",\"img\":\"DatasetPreview_img__1WPIj\",\"info\":\"DatasetPreview_info__1ng3x\",\"descr\":\"DatasetPreview_descr__3T1ua\",\"addIcon\":\"DatasetPreview_addIcon__3DYXU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PrepareSelection_wrapper__1zU8e\",\"list\":\"PrepareSelection_list__1vaRc\",\"datasetPreview\":\"PrepareSelection_datasetPreview__3hWB6\",\"selectionPreview\":\"PrepareSelection_selectionPreview__1ZC-r\",\"previewActive\":\"PrepareSelection_previewActive__qGRQu\",\"editor\":\"PrepareSelection_editor__1pXGe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInputRow\":\"DatasetListPage_searchInputRow__2qzrj\",\"searchWrapper\":\"DatasetListPage_searchWrapper__jPPse\",\"searchInput\":\"DatasetListPage_searchInput__KRtwe\",\"searchIcon\":\"DatasetListPage_searchIcon__2hXwe\",\"filterWrapper\":\"DatasetListPage_filterWrapper__2WMrv\",\"tagsWrapper\":\"DatasetListPage_tagsWrapper__MEMmq\",\"datasetList\":\"DatasetListPage_datasetList__3fidz\"};"],"sourceRoot":""}